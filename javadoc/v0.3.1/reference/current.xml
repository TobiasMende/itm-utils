<api>
<package name="de.uniluebeck.itm.tr.util"
>
<class name="AbstractListenable"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="de.uniluebeck.itm.tr.util.Listenable">
</implements>
<constructor name="AbstractListenable"
 type="de.uniluebeck.itm.tr.util.AbstractListenable"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="T">
</parameter>
</method>
<method name="removeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="T">
</parameter>
</method>
<field name="listeners"
 type="com.google.common.collect.ImmutableList"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="ExecutorUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ExecutorUtils"
 type="de.uniluebeck.itm.tr.util.ExecutorUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="shutdown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executorService" type="java.util.concurrent.ExecutorService">
</parameter>
<parameter name="timeout" type="int">
</parameter>
<parameter name="timeUnit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
</class>
<class name="FileUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileUtils"
 type="de.uniluebeck.itm.tr.util.FileUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="copy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="java.io.InputStream">
</parameter>
<parameter name="out" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="copyToTmpFile"
 return="java.io.File"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="java.io.InputStream">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<parameter name="suffix" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="deleteDirectory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dir" type="java.io.File">
</parameter>
<exception name="SecurityException" type="java.lang.SecurityException">
</exception>
</method>
</class>
<class name="ForkJoinHelper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ForkJoinHelper"
 type="de.uniluebeck.itm.tr.util.ForkJoinHelper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="fork"
 return="com.google.common.collect.BiMap&lt;? extends java.util.concurrent.Callable&lt;V&gt;, java.util.concurrent.Future&lt;V&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="callables" type="java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;V&gt;&gt;">
</parameter>
<parameter name="executorService" type="java.util.concurrent.ExecutorService">
</parameter>
</method>
<method name="join"
 return="com.google.common.collect.BiMap&lt;java.util.concurrent.Callable&lt;V&gt;, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="calledCallables" type="com.google.common.collect.BiMap&lt;? extends java.util.concurrent.Callable&lt;V&gt;, java.util.concurrent.Future&lt;V&gt;&gt;">
</parameter>
</method>
<method name="join"
 return="com.google.common.collect.BiMap&lt;java.util.concurrent.Callable&lt;V&gt;, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="calledCallables" type="com.google.common.collect.BiMap&lt;? extends java.util.concurrent.Callable&lt;V&gt;, java.util.concurrent.Future&lt;V&gt;&gt;">
</parameter>
<parameter name="omitFailures" type="boolean">
</parameter>
</method>
</class>
<class name="ForwardingScheduledExecutorService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.concurrent.ScheduledExecutorService">
</implements>
<constructor name="ForwardingScheduledExecutorService"
 type="de.uniluebeck.itm.tr.util.ForwardingScheduledExecutorService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scheduledExecutorService" type="java.util.concurrent.ScheduledExecutorService">
</parameter>
<parameter name="executorService" type="java.util.concurrent.ExecutorService">
</parameter>
</constructor>
<method name="awaitTermination"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timeout" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method name="execute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="java.lang.Runnable">
</parameter>
</method>
<method name="invokeAll"
 return="java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tasks" type="java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method name="invokeAll"
 return="java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tasks" type="java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;">
</parameter>
<parameter name="timeout" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method name="invokeAny"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tasks" type="java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;">
</parameter>
<exception name="ExecutionException" type="java.util.concurrent.ExecutionException">
</exception>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method name="invokeAny"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tasks" type="java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;">
</parameter>
<parameter name="timeout" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="ExecutionException" type="java.util.concurrent.ExecutionException">
</exception>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
<exception name="TimeoutException" type="java.util.concurrent.TimeoutException">
</exception>
</method>
<method name="isShutdown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isTerminated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="schedule"
 return="java.util.concurrent.ScheduledFuture&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="java.lang.Runnable">
</parameter>
<parameter name="delay" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
<method name="schedule"
 return="java.util.concurrent.ScheduledFuture&lt;V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="callable" type="java.util.concurrent.Callable&lt;V&gt;">
</parameter>
<parameter name="delay" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
<method name="scheduleAtFixedRate"
 return="java.util.concurrent.ScheduledFuture&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="java.lang.Runnable">
</parameter>
<parameter name="initialDelay" type="long">
</parameter>
<parameter name="period" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
<method name="scheduleWithFixedDelay"
 return="java.util.concurrent.ScheduledFuture&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="java.lang.Runnable">
</parameter>
<parameter name="initialDelay" type="long">
</parameter>
<parameter name="delay" type="long">
</parameter>
<parameter name="unit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
<method name="shutdown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="shutdownNow"
 return="java.util.List&lt;java.lang.Runnable&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="submit"
 return="java.util.concurrent.Future&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="task" type="java.lang.Runnable">
</parameter>
</method>
<method name="submit"
 return="java.util.concurrent.Future&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="task" type="java.lang.Runnable">
</parameter>
<parameter name="result" type="T">
</parameter>
</method>
<method name="submit"
 return="java.util.concurrent.Future&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="task" type="java.util.concurrent.Callable&lt;T&gt;">
</parameter>
</method>
</class>
<interface name="Listenable"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="T">
</parameter>
</method>
<method name="removeListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="T">
</parameter>
</method>
</interface>
<class name="Logging"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Logging"
 type="de.uniluebeck.itm.tr.util.Logging"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setDebugLoggingDefaults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLoggingDefaults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLoggingDefaults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="org.apache.log4j.Level">
</parameter>
</method>
<method name="setLoggingDefaults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="org.apache.log4j.Level">
</parameter>
<parameter name="appenders" type="org.apache.log4j.Appender...">
</parameter>
</method>
<method name="setLoggingDefaults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="org.apache.log4j.Level">
</parameter>
<parameter name="layout" type="org.apache.log4j.Layout">
</parameter>
</method>
<field name="DEFAULT_PATTERN_LAYOUT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;%-23d{yyyy-MM-dd HH:mm:ss,SSS} | %-30.30t | %-30.30c{1} | %-5p | %m%n&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="NetworkUtils"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NetworkUtils"
 type="de.uniluebeck.itm.tr.util.NetworkUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="checkConnectivity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="endpointUrl" type="java.lang.String">
</parameter>
</method>
<method name="testConnectivity"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="endpointURL" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Preconditions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Preconditions"
 type="de.uniluebeck.itm.tr.util.Preconditions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertCollectionMinCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collection" type="java.util.Collection&lt;?&gt;">
</parameter>
<parameter name="minCountInclusive" type="int">
</parameter>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="assertCollectionMinMaxCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collection" type="java.util.Collection&lt;?&gt;">
</parameter>
<parameter name="minInclusive" type="int">
</parameter>
<parameter name="maxInclusive" type="int">
</parameter>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
</class>
<class name="PropertiesUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PropertiesUtils"
 type="de.uniluebeck.itm.tr.util.PropertiesUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="copyToProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="map" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
</class>
<interface name="RateLimiter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="approvedCount"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="checkIfInSlotAndCount"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="dismissedCount"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="nextSlot"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RateLimiterImpl"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="de.uniluebeck.itm.tr.util.RateLimiter">
</implements>
<constructor name="RateLimiterImpl"
 type="de.uniluebeck.itm.tr.util.RateLimiterImpl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="approvalsPerTimeSlot" type="int">
</parameter>
<parameter name="slotLength" type="int">
</parameter>
<parameter name="timeUnit" type="java.util.concurrent.TimeUnit">
</parameter>
</constructor>
<method name="approvedCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="checkIfInSlotAndCount"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="dismissedCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="nextSlot"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SecureIdGenerator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SecureIdGenerator"
 type="de.uniluebeck.itm.tr.util.SecureIdGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getNextId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="Service"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="start"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="stop"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="StringUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StringUtils"
 type="de.uniluebeck.itm.tr.util.StringUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertHexOrDecLongUrnSuffix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="RuntimeException" type="java.lang.RuntimeException">
</exception>
</method>
<method name="assertHexOrDecLongValue"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
<method name="fromStringToByteArray"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="java.lang.String">
</parameter>
</method>
<method name="fromStringToLong"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="java.lang.String">
</parameter>
</method>
<method name="getUrnSuffix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="urn" type="java.lang.String">
</parameter>
</method>
<method name="hasHexOrDecLongUrnSuffix"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
<method name="jaxbMarshal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jaxbObject" type="java.lang.Object">
</parameter>
</method>
<method name="jaxbMarshalFragment"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jaxbObject" type="java.lang.Object">
</parameter>
<exception name="JAXBException" type="javax.xml.bind.JAXBException">
</exception>
</method>
<method name="parseHexOrDecLong"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
<method name="parseHexOrDecLongFromUrn"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="urn" type="java.lang.String">
</parameter>
</method>
<method name="parseHexOrDecLongUrnSuffix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
<method name="parseLines"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
</method>
<method name="replaceNonPrintableAsciiCharacters"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
</method>
<method name="replaceNonPrintableAsciiCharacters"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</method>
<method name="replaceNonPrintableAsciiCharacters"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
</method>
<method name="toASCIIString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="char">
</parameter>
</method>
<method name="toHexString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="i" type="int">
</parameter>
</method>
<method name="toHexStringReverseDirection"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
</method>
<method name="toHexStringReverseDirection"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tmp" type="byte[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</method>
<method name="toPrintableString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
</method>
<method name="toPrintableString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="maxLength" type="int">
</parameter>
</method>
<method name="toPrintableString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="java.util.Collection">
</parameter>
<parameter name="divider" type="java.lang.String">
</parameter>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="list" type="java.util.Collection&lt;?&gt;">
</parameter>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="short[]">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</method>
<field name="STRING_TO_LOWER_CASE"
 type="com.google.common.base.Function"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="STRING_TO_UPPER_CASE"
 type="com.google.common.base.Function"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TimeDiff"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TimeDiff"
 type="de.uniluebeck.itm.tr.util.TimeDiff"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="TimeDiff"
 type="de.uniluebeck.itm.tr.util.TimeDiff"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timeOutMillis" type="long">
</parameter>
</constructor>
<method name="absoluteMillis"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="d"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="h"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isTimeout"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="m"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="ms"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="noTimeout"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="s"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setTimeOutMillis"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timeOutMillis" type="long">
</parameter>
</method>
<method name="touch"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TimedCache"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Map">
</implements>
<constructor name="TimedCache"
 type="de.uniluebeck.itm.tr.util.TimedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="TimedCache"
 type="de.uniluebeck.itm.tr.util.TimedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defaultTimeout" type="int">
</parameter>
<parameter name="defaultTimeUnit" type="java.util.concurrent.TimeUnit">
</parameter>
</constructor>
<constructor name="TimedCache"
 type="de.uniluebeck.itm.tr.util.TimedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scheduler" type="java.util.concurrent.ScheduledExecutorService">
</parameter>
</constructor>
<constructor name="TimedCache"
 type="de.uniluebeck.itm.tr.util.TimedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scheduler" type="java.util.concurrent.ScheduledExecutorService">
</parameter>
<parameter name="defaultTimeout" type="long">
</parameter>
<parameter name="defaultTimeUnit" type="java.util.concurrent.TimeUnit">
</parameter>
</constructor>
<method name="clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="containsKey"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
</method>
<method name="containsValue"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="entrySet"
 return="java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="get"
 return="V"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
</method>
<method name="getDefaultTimeout"
 return="de.uniluebeck.itm.tr.util.Tuple&lt;java.lang.Long, java.util.concurrent.TimeUnit&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEmpty"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="keySet"
 return="java.util.Set&lt;K&gt;"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="put"
 return="V"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="K">
</parameter>
<parameter name="value" type="V">
</parameter>
</method>
<method name="put"
 return="V"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="K">
</parameter>
<parameter name="value" type="V">
</parameter>
<parameter name="timeout" type="long">
</parameter>
<parameter name="timeUnit" type="java.util.concurrent.TimeUnit">
</parameter>
</method>
<method name="putAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="java.util.Map&lt;? extends K, ? extends V&gt;">
</parameter>
</method>
<method name="remove"
 return="V"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
</method>
<method name="setListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="de.uniluebeck.itm.tr.util.TimedCacheListener&lt;K, V&gt;">
</parameter>
</method>
<method name="size"
 return="int"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="values"
 return="java.util.Collection&lt;V&gt;"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="TimedCacheListener"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="timeout"
 return="de.uniluebeck.itm.tr.util.Tuple&lt;java.lang.Long, java.util.concurrent.TimeUnit&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="K">
</parameter>
<parameter name="value" type="V">
</parameter>
</method>
</interface>
<class name="Triple"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Triple"
 type="de.uniluebeck.itm.tr.util.Triple"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="first" type="V">
</parameter>
<parameter name="second" type="W">
</parameter>
<parameter name="third" type="X">
</parameter>
</constructor>
<method name="getFirst"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSecond"
 return="W"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThird"
 return="X"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Tuple"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Tuple"
 type="de.uniluebeck.itm.tr.util.Tuple"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="first" type="V">
</parameter>
<parameter name="second" type="W">
</parameter>
</constructor>
<method name="getFirst"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSecond"
 return="W"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="UrlUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UrlUtils"
 type="de.uniluebeck.itm.tr.util.UrlUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="convertHostToZeros"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oldUrl" type="java.lang.String">
</parameter>
<exception name="MalformedURLException" type="java.net.MalformedURLException">
</exception>
</method>
<method name="convertHostToZeros"
 return="java.net.URL"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.net.URL">
</parameter>
<exception name="MalformedURLException" type="java.net.MalformedURLException">
</exception>
</method>
<method name="getRandomUnprivilegedPort"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
</api>
